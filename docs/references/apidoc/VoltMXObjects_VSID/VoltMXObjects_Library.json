{"label":"VoltMXObjects","comment":"","valuetype":"","filenamebase":"VoltMXObjects_Library","fqnprefix":"VoltMXObjects","qn":"VoltMXObjects","codesample":"","signaturecode":65536,"instancecode":65536,"description":"Classes for integrating with Volt MX Foundry from Pre/Postprocessors and Integration Services","codesamplehtml":"","scriptcreator":"Paul Withers","signature":"Library VoltMXObjects","modifiers":"","commentblock":"","commenthtml":"","inlinecomment":"", "methods":[{"label":"getErrorMsg","comment":"Converts an Error object to error code, message, line and stack trace","valuetype":"String","filenamebase":"getErrorMsg_Method","fqnprefix":"VoltMXObjects","qn":"getErrorMsg","codesample":"&amp;apos;The following code is the Foundry boilerplate:\n    Dim ctx as New Context()\n    Dim data as String\n    Try\n        data = ctx.Context\n        Call extractObjects(data, false)\n        &amp;apos;****************\n        &amp;apos;START OF FOUNDRY HANDLER\n        &amp;apos;****************\n        \n        &amp;apos;****************\n        &amp;apos;END OF FOUNDRY HANDLER\n        &amp;apos;****************\n    Catch\n        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))\n    Finally\n        Print VoltMxResult.toJson().toString(false)\n    End Try","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(prefix As String)","signature":"Public Function getErrorMsg(prefix As String) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Converts an Error object to error code, message, line and stack trace&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Converts an Error object to error code, message, line and stack trace","inlinecomment":" \t &apos; Converts an Error object to error code, message, line and stack trace","codesamplehtml":"&amp;apos;The following code is the Foundry boilerplate:&lt;br /&gt;    Dim ctx as New Context()&lt;br /&gt;    Dim data as String&lt;br /&gt;    Try&lt;br /&gt;        data = ctx.Context&lt;br /&gt;        Call extractObjects(data, false)&lt;br /&gt;        &amp;apos;****************&lt;br /&gt;        &amp;apos;START OF FOUNDRY HANDLER&lt;br /&gt;        &amp;apos;****************&lt;br /&gt;        &lt;br /&gt;        &amp;apos;****************&lt;br /&gt;        &amp;apos;END OF FOUNDRY HANDLER&lt;br /&gt;        &amp;apos;****************&lt;br /&gt;    Catch&lt;br /&gt;        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))&lt;br /&gt;    Finally&lt;br /&gt;        Print VoltMxResult.toJson().toString(false)&lt;br /&gt;    End Try", "signatureelements":["Public","Function"], "arguments":[{"label":"prefix","comment":"Prefix to prepend to the outputted error message","valuetype":"String","filenamebase":"prefix_ValuedElement","fqnprefix":"VoltMXObjectsgetErrorMsg","qn":"prefix","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Prefix to prepend to the outputted error message&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Prefix to prepend to the outputted error message","inlinecomment":" \t &apos; Prefix to prepend to the outputted error message"}]},{"label":"jsonSort","comment":"Given an array of JSON objects, returns a sorted array of JSON objects. Uses VoltScript Collections internally as a dependency.","valuetype":"JsonObject","filenamebase":"jsonSort_Method","fqnprefix":"VoltMXObjects","qn":"jsonSort","codesample":"    Dim parser as New JsonParser()\n    Dim dataobj as New JsonObject(true), sortedobj as JsonObject()\n    Dim fpath as String\n    fpath = CurDir() &amp;amp; &amp;quot;/myJSONData.json&amp;quot;\n    Try\n        Call parser.loadFromFile(fpath)\n        Set dataObj = parser.getRootObject()\n        If dataobj Is Nothing Then\n            Print &amp;quot;Error: Unable to parse file &amp;quot; &amp;amp; fpath\n            Exit Function\n        End If\n        Set sortedobj = jsonSort(dataObj, &amp;quot;company&amp;quot;, False, &amp;quot;address/state&amp;quot;, False, &amp;quot;address/city&amp;quot;, False, &amp;quot;/&amp;quot;)\n    Catch\n        Print &amp;quot;Error &amp;quot; &amp;amp; Error() &amp;amp; &amp;quot; on line &amp;quot; &amp;amp; Erl()\n    End Try","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(dataObj As JsonObject, lbl1 As String, lbl1Desc As Boolean, lbl2 As String, lbl2Desc As Boolean, lbl3 As String, lbl3Desc As Boolean, delim As String)","signature":"Public Function jsonSort(dataObj As JsonObject, lbl1 As String, lbl1Desc As Boolean, lbl2 As String, lbl2Desc As Boolean, lbl3 As String, lbl3Desc As Boolean, delim As String) As JsonObject","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Given an array of JSON objects, returns a sorted array of JSON objects. Uses VoltScript Collections internally as a dependency.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Given an array of JSON objects, returns a sorted array of JSON objects. Uses VoltScript Collections internally as a dependency.","inlinecomment":" \t &apos; Given an array of JSON objects, returns a sorted array of JSON objects. Uses VoltScript Collections internally as a dependency.","codesamplehtml":"    Dim parser as New JsonParser()&lt;br /&gt;    Dim dataobj as New JsonObject(true), sortedobj as JsonObject()&lt;br /&gt;    Dim fpath as String&lt;br /&gt;    fpath = CurDir() &amp;amp; &amp;quot;/myJSONData.json&amp;quot;&lt;br /&gt;    Try&lt;br /&gt;        Call parser.loadFromFile(fpath)&lt;br /&gt;        Set dataObj = parser.getRootObject()&lt;br /&gt;        If dataobj Is Nothing Then&lt;br /&gt;            Print &amp;quot;Error: Unable to parse file &amp;quot; &amp;amp; fpath&lt;br /&gt;            Exit Function&lt;br /&gt;        End If&lt;br /&gt;        Set sortedobj = jsonSort(dataObj, &amp;quot;company&amp;quot;, False, &amp;quot;address/state&amp;quot;, False, &amp;quot;address/city&amp;quot;, False, &amp;quot;/&amp;quot;)&lt;br /&gt;    Catch&lt;br /&gt;        Print &amp;quot;Error &amp;quot; &amp;amp; Error() &amp;amp; &amp;quot; on line &amp;quot; &amp;amp; Erl()&lt;br /&gt;    End Try", "signatureelements":["Public","Function"], "arguments":[{"label":"dataObj","comment":"JSON Object to be sorted","valuetype":"JsonObject","filenamebase":"dataObj_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"dataObj","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON Object to be sorted&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON Object to be sorted","inlinecomment":" \t &apos; JSON Object to be sorted"},{"label":"lbl1","comment":"First label on which to sort","valuetype":"String","filenamebase":"lbl1_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"lbl1","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;First label on which to sort&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"First label on which to sort","inlinecomment":" \t &apos; First label on which to sort"},{"label":"lbl1Desc","comment":"True if the first sort should be Descending, False if Ascending","valuetype":"Boolean","filenamebase":"lbl1Desc_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"lbl1Desc","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;True if the first sort should be Descending, False if Ascending&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"True if the first sort should be Descending, False if Ascending","inlinecomment":" \t &apos; True if the first sort should be Descending, False if Ascending"},{"label":"lbl2","comment":"Second label on which to sort. Optional.","valuetype":"String","filenamebase":"lbl2_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"lbl2","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Second label on which to sort. Optional.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Second label on which to sort. Optional.","inlinecomment":" \t &apos; Second label on which to sort. Optional."},{"label":"lbl2Desc","comment":"True if the second sort should be Descending, False if Ascending","valuetype":"Boolean","filenamebase":"lbl2Desc_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"lbl2Desc","argumentindex":5,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;True if the second sort should be Descending, False if Ascending&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"True if the second sort should be Descending, False if Ascending","inlinecomment":" \t &apos; True if the second sort should be Descending, False if Ascending"},{"label":"lbl3","comment":"Third label on which to sort. Optional.","valuetype":"String","filenamebase":"lbl3_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"lbl3","argumentindex":6,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Third label on which to sort. Optional.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Third label on which to sort. Optional.","inlinecomment":" \t &apos; Third label on which to sort. Optional."},{"label":"lbl3Desc","comment":"True if the third sort should be Descending, False if Ascending","valuetype":"Boolean","filenamebase":"lbl3Desc_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"lbl3Desc","argumentindex":7,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;True if the third sort should be Descending, False if Ascending&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"True if the third sort should be Descending, False if Ascending","inlinecomment":" \t &apos; True if the third sort should be Descending, False if Ascending"},{"label":"delim","comment":"The delimiter used by label paths. If not provided, delim will default to &amp;quot;/&amp;quot;","valuetype":"String","filenamebase":"delim_ValuedElement","fqnprefix":"VoltMXObjectsjsonSort","qn":"delim","argumentindex":8,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;The delimiter used by label paths. If not provided, delim will default to &amp;quot;/&amp;quot;&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"The delimiter used by label paths. If not provided, delim will default to &amp;quot;/&amp;quot;","inlinecomment":" \t &apos; The delimiter used by label paths. If not provided, delim will default to &amp;quot;/&amp;quot;"}]},{"label":"extractObjects","comment":"","valuetype":"","filenamebase":"extractObjects_Method","fqnprefix":"VoltMXObjects","qn":"extractObjects","codesample":"&amp;apos;The following is the Foundry boilerplate code:    Dim ctx as New Context()\n    Dim data as String\n    Try\n        data = ctx.Context\n        Call extractObjects(data, false)\n        &amp;apos;****************\n        &amp;apos;START OF FOUNDRY HANDLER\n        &amp;apos;****************\n        \n        &amp;apos;****************\n        &amp;apos;END OF FOUNDRY HANDLER\n        &amp;apos;****************\n    Catch\n        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))\n    Finally\n        Print VoltMxResult.toJson().toString(false)\n    End Try","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(data As String, isPreprocessor As Boolean)","signature":"Public Sub extractObjects(data As String, isPreprocessor As Boolean)","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","codesamplehtml":"&amp;apos;The following is the Foundry boilerplate code:    Dim ctx as New Context()&lt;br /&gt;    Dim data as String&lt;br /&gt;    Try&lt;br /&gt;        data = ctx.Context&lt;br /&gt;        Call extractObjects(data, false)&lt;br /&gt;        &amp;apos;****************&lt;br /&gt;        &amp;apos;START OF FOUNDRY HANDLER&lt;br /&gt;        &amp;apos;****************&lt;br /&gt;        &lt;br /&gt;        &amp;apos;****************&lt;br /&gt;        &amp;apos;END OF FOUNDRY HANDLER&lt;br /&gt;        &amp;apos;****************&lt;br /&gt;    Catch&lt;br /&gt;        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))&lt;br /&gt;    Finally&lt;br /&gt;        Print VoltMxResult.toJson().toString(false)&lt;br /&gt;    End Try", "signatureelements":["Public","Sub"], "arguments":[{"label":"data","comment":"JSON string input from Foundry","valuetype":"String","filenamebase":"data_ValuedElement","fqnprefix":"VoltMXObjectsextractObjects","qn":"data","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON string input from Foundry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON string input from Foundry","inlinecomment":" \t &apos; JSON string input from Foundry"},{"label":"isPreprocessor","comment":"Whether Foundry object is from a preprocessor","valuetype":"Boolean","filenamebase":"isPreprocessor_ValuedElement","fqnprefix":"VoltMXObjectsextractObjects","qn":"isPreprocessor","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether Foundry object is from a preprocessor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether Foundry object is from a preprocessor","inlinecomment":" \t &apos; Whether Foundry object is from a preprocessor"}]}], "classes":[{"classname":"jsonComparator","comment":"This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.","valuetype":"","filenamebase":"jsonComparator_ObjectClass","fqnprefix":"VoltMXObjects","qn":"jsonComparator","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"4F761A27149261AF00258B3C005CD440","signature":"Public Class jsonComparator","modifiers":"Public","classname":"jsonComparator","parentclassname":"None","constructorsignature":"Public Sub New(isDescending As Boolean, jlabelobj As jsonSortLabels)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.","inlinecomment":" \t &apos; This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.","codesamplehtml":"", "methods":[{"label":"Compare","comment":"This method will compare two JSON objects based on the labels provided.","valuetype":"Integer","filenamebase":"Compare_Method","fqnprefix":"VoltMXObjects.jsonComparator","qn":"Compare","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(src As Variant, tgt As Variant)","signature":"Public Function Compare(src As Variant, tgt As Variant) As Integer","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This method will compare two JSON objects based on the labels provided.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This method will compare two JSON objects based on the labels provided.","inlinecomment":" \t &apos; This method will compare two JSON objects based on the labels provided.","parentclassname":"jsonComparator","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"src","comment":"","valuetype":"Variant","filenamebase":"src_ValuedElement","fqnprefix":"VoltMXObjectsjsonComparatorCompare","qn":"src","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"tgt","comment":"","valuetype":"Variant","filenamebase":"tgt_ValuedElement","fqnprefix":"VoltMXObjectsjsonComparatorCompare","qn":"tgt","argumentindex":2,"commentblock":"","commenthtml":"","inlinecomment":""}]},{"label":"New","comment":"This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltMXObjects.jsonComparator","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(isDescending As Boolean, jlabelobj As jsonSortLabels)","signature":"Public Sub New(isDescending As Boolean, jlabelobj As jsonSortLabels)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.","inlinecomment":" \t &apos; This class is used by the jsonSort class to compare two JSON objects based on the labels and sort orders provided.","parentclassname":"jsonComparator","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"isDescending","comment":"","valuetype":"Boolean","filenamebase":"isDescending_ValuedElement","fqnprefix":"VoltMXObjectsjsonComparatorNew","qn":"isDescending","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"jlabelobj","comment":"","valuetype":"jsonSortLabels","filenamebase":"jlabelobj_ValuedElement","fqnprefix":"VoltMXObjectsjsonComparatorNew","qn":"jlabelobj","argumentindex":2,"commentblock":"","commenthtml":"","inlinecomment":""}]}]},{"classname":"jsonSortLabels","comment":"This class is used to store the labels, sort order, and delimiter for the jsonSort class. The class is used by the jsonSort class to sort the JSON objects.","valuetype":"","filenamebase":"jsonSortLabels_ObjectClass","fqnprefix":"VoltMXObjects","qn":"jsonSortLabels","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"658749C95F37607200258B3C005D16DA","signature":"Public Class jsonSortLabels","modifiers":"Public","classname":"jsonSortLabels","parentclassname":"None","constructorsignature":"","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;This class is used to store the labels, sort order, and delimiter for the jsonSort class. The class is used by the jsonSort class to sort the JSON objects.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"This class is used to store the labels, sort order, and delimiter for the jsonSort class. The class is used by the jsonSort class to sort the JSON objects.","inlinecomment":" \t &apos; This class is used to store the labels, sort order, and delimiter for the jsonSort class. The class is used by the jsonSort class to sort the JSON objects.","codesamplehtml":"", "methods":[{"label":"setLabels","comment":"Simple method to set the labels, sort order, and delimiter","valuetype":"","filenamebase":"setLabels_Method","fqnprefix":"VoltMXObjects.jsonSortLabels","qn":"setLabels","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(label1 As String, label1IsDesc As Boolean, label2 As String, label2IsDesc As Boolean, label3 As String, label3IsDesc As Boolean, delim As String)","signature":"Public Sub setLabels(label1 As String, label1IsDesc As Boolean, label2 As String, label2IsDesc As Boolean, label3 As String, label3IsDesc As Boolean, delim As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Simple method to set the labels, sort order, and delimiter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Simple method to set the labels, sort order, and delimiter","inlinecomment":" \t &apos; Simple method to set the labels, sort order, and delimiter","parentclassname":"jsonSortLabels","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"label1","comment":"","valuetype":"String","filenamebase":"label1_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"label1","argumentindex":1,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"label1IsDesc","comment":"","valuetype":"Boolean","filenamebase":"label1IsDesc_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"label1IsDesc","argumentindex":2,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"label2","comment":"","valuetype":"String","filenamebase":"label2_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"label2","argumentindex":3,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"label2IsDesc","comment":"","valuetype":"Boolean","filenamebase":"label2IsDesc_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"label2IsDesc","argumentindex":4,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"label3","comment":"","valuetype":"String","filenamebase":"label3_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"label3","argumentindex":5,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"label3IsDesc","comment":"","valuetype":"Boolean","filenamebase":"label3IsDesc_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"label3IsDesc","argumentindex":6,"commentblock":"","commenthtml":"","inlinecomment":""},{"label":"delim","comment":"","valuetype":"String","filenamebase":"delim_ValuedElement","fqnprefix":"VoltMXObjectsjsonSortLabelssetLabels","qn":"delim","argumentindex":7,"commentblock":"","commenthtml":"","inlinecomment":""}]}]},{"classname":"VoltMxRequestObject","comment":"Class for interacting with Foundry request.","valuetype":"","filenamebase":"VoltMxRequestObject_ObjectClass","fqnprefix":"VoltMXObjects","qn":"VoltMxRequestObject","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"97A67FA4A5DAAF0E80258AAE003739D5","signature":"Public Class VoltMxRequestObject","modifiers":"Public","classname":"VoltMxRequestObject","parentclassname":"None","constructorsignature":"Public Sub New(result As VoltMxResultObject, serviceInputParams As JsonObject, identityParam As JsonObject, jsonObj As JsonObject)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for interacting with Foundry request.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for interacting with Foundry request.","inlinecomment":" \t &apos; Class for interacting with Foundry request.","codesamplehtml":"", "methods":[{"label":"getHeaderParam","comment":"Gets a header parameter from the Foundry request.","valuetype":"Variant","filenamebase":"getHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"getHeaderParam","codesample":"&amp;apos; This gets the user-agent header\nDim userAgent as String\nuserAgent = VoltMxRequest.getHeaderParam(&amp;quot;user-agent&amp;quot;)","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getHeaderParam(key As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a header parameter from the Foundry request.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a header parameter from the Foundry request.","inlinecomment":" \t &apos; Gets a header parameter from the Foundry request.","parentclassname":"VoltMxRequestObject","codesamplehtml":"&amp;apos; This gets the user-agent header&lt;br /&gt;Dim userAgent as String&lt;br /&gt;userAgent = VoltMxRequest.getHeaderParam(&amp;quot;user-agent&amp;quot;)", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key for the header parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectgetHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the header parameter","inlinecomment":" \t &apos; Key for the header parameter"}]},{"label":"getIdentityParam","comment":"Gets a parameter from the JWT token for an identity service associated with this integration service, or an empty string if no identity service is assigned to this integration service.","valuetype":"String","filenamebase":"getIdentityParam_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"getIdentityParam","codesample":"&amp;apos;The following sample gets the base64-encoded JWT token passed from the identity service, which might be used to connect to a remote database\nDim jwt as String\njwt = VoltMxRequest.getIdentityParam()","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function getIdentityParam() As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a parameter from the JWT token for an identity service associated with this integration service, or an empty string if no identity service is assigned to this integration service.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a parameter from the JWT token for an identity service associated with this integration service, or an empty string if no identity service is assigned to this integration service.","inlinecomment":" \t &apos; Gets a parameter from the JWT token for an identity service associated with this integration service, or an empty string if no identity service is assigned to this integration service.","parentclassname":"VoltMxRequestObject","codesamplehtml":"&amp;apos;The following sample gets the base64-encoded JWT token passed from the identity service, which might be used to connect to a remote database&lt;br /&gt;Dim jwt as String&lt;br /&gt;jwt = VoltMxRequest.getIdentityParam()", "signatureelements":["Public","Function"]},{"label":"getInputParam","comment":"Gets an input parameter passed to Foundry.","valuetype":"Variant","filenamebase":"getInputParam_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"getInputParam","codesample":"&amp;apos;The following sample gets username parameter and validates it&amp;apos;s not blank\nDim username as String\nusername = VoltMxRequest.getInputParam(&amp;quot;username&amp;quot;)\nIf (username = &amp;quot;&amp;quot;) Then\n    VoltMxResult.setErrorMessage(&amp;quot;Username is required&amp;quot;)\n    Return False\nEnd If","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getInputParam(key As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets an input parameter passed to Foundry.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets an input parameter passed to Foundry.","inlinecomment":" \t &apos; Gets an input parameter passed to Foundry.","parentclassname":"VoltMxRequestObject","codesamplehtml":"&amp;apos;The following sample gets username parameter and validates it&amp;apos;s not blank&lt;br /&gt;Dim username as String&lt;br /&gt;username = VoltMxRequest.getInputParam(&amp;quot;username&amp;quot;)&lt;br /&gt;If (username = &amp;quot;&amp;quot;) Then&lt;br /&gt;    VoltMxResult.setErrorMessage(&amp;quot;Username is required&amp;quot;)&lt;br /&gt;    Return False&lt;br /&gt;End If", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key for the input parameter. Keys are case-sensitive","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectgetInputParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the input parameter. Keys are case-sensitive&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the input parameter. Keys are case-sensitive","inlinecomment":" \t &apos; Key for the input parameter. Keys are case-sensitive"}]},{"label":"getRequestParam","comment":"Gets a Foundry request parameter. These are parameters like appID, used for internal Foundry processing. This is not for input parameters defined in the Foundry integration service mapping.","valuetype":"Variant","filenamebase":"getRequestParam_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"getRequestParam","codesample":"&amp;apos;The following sample gets the ID of the app from which the integration service is running\nDim appId as String\nappId = VoltMxRequest.getRequestParam(&amp;quot;appID&amp;quot;)","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getRequestParam(key As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a Foundry request parameter. These are parameters like appID, used for internal Foundry processing. This is not for input parameters defined in the Foundry integration service mapping.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a Foundry request parameter. These are parameters like appID, used for internal Foundry processing. This is not for input parameters defined in the Foundry integration service mapping.","inlinecomment":" \t &apos; Gets a Foundry request parameter. These are parameters like appID, used for internal Foundry processing. This is not for input parameters defined in the Foundry integration service mapping.","parentclassname":"VoltMxRequestObject","codesamplehtml":"&amp;apos;The following sample gets the ID of the app from which the integration service is running&lt;br /&gt;Dim appId as String&lt;br /&gt;appId = VoltMxRequest.getRequestParam(&amp;quot;appID&amp;quot;)", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key for the request parameter. Keys are case-sensitive","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectgetRequestParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the request parameter. Keys are case-sensitive&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the request parameter. Keys are case-sensitive","inlinecomment":" \t &apos; Key for the request parameter. Keys are case-sensitive"}]},{"label":"addInputParam","comment":"Adds an input parameter for the Foundry integration service. This proxies the corresponding function in VotMxResult object. Only relevant for preprocessors.","valuetype":"","filenamebase":"addInputParam_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"addInputParam","codesample":"&amp;apos;The following code would add a username from a session parameter to the subsequent request, if available. This could be used to lazy-load the value.\nDim username as String\nusername = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)\nIf (username != &amp;quot;&amp;quot;) Then\n    Call VoltMxRequest.addInputParam(&amp;quot;username&amp;quot;, username)\nElse\n   &amp;apos; E.g. extract from base64-decoded JWT token)\nEnd If","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addInputParam(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds an input parameter for the Foundry integration service. This proxies the corresponding function in VotMxResult object. Only relevant for preprocessors.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds an input parameter for the Foundry integration service. This proxies the corresponding function in VotMxResult object. Only relevant for preprocessors.","inlinecomment":" \t &apos; Adds an input parameter for the Foundry integration service. This proxies the corresponding function in VotMxResult object. Only relevant for preprocessors.","parentclassname":"VoltMxRequestObject","codesamplehtml":"&amp;apos;The following code would add a username from a session parameter to the subsequent request, if available. This could be used to lazy-load the value.&lt;br /&gt;Dim username as String&lt;br /&gt;username = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)&lt;br /&gt;If (username != &amp;quot;&amp;quot;) Then&lt;br /&gt;    Call VoltMxRequest.addInputParam(&amp;quot;username&amp;quot;, username)&lt;br /&gt;Else&lt;br /&gt;   &amp;apos; E.g. extract from base64-decoded JWT token)&lt;br /&gt;End If", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the input parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectaddInputParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the input parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the input parameter","inlinecomment":" \t &apos; Key for the input parameter"},{"label":"value","comment":"Value for the input parameter. This should be a scalar.","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectaddInputParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the input parameter. This should be a scalar.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the input parameter. This should be a scalar.","inlinecomment":" \t &apos; Value for the input parameter. This should be a scalar."}]},{"label":"addRequestParam","comment":"Adds a request parameter to the Foundry request. This proxies the corresponding method in VoltMxResult. Only relevant for preprocessors.","valuetype":"","filenamebase":"addRequestParam_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"addRequestParam","codesample":"&amp;apos; This code adds a request parameter to the subsequent request\nCall VoltMxResult.addRequestParam(&amp;quot;VOLT-MX-VOLTSCRIPT&amp;quot;, &amp;quot;Code ran&amp;quot;)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addRequestParam(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a request parameter to the Foundry request. This proxies the corresponding method in VoltMxResult. Only relevant for preprocessors.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a request parameter to the Foundry request. This proxies the corresponding method in VoltMxResult. Only relevant for preprocessors.","inlinecomment":" \t &apos; Adds a request parameter to the Foundry request. This proxies the corresponding method in VoltMxResult. Only relevant for preprocessors.","parentclassname":"VoltMxRequestObject","codesamplehtml":"&amp;apos; This code adds a request parameter to the subsequent request&lt;br /&gt;Call VoltMxResult.addRequestParam(&amp;quot;VOLT-MX-VOLTSCRIPT&amp;quot;, &amp;quot;Code ran&amp;quot;)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the request parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectaddRequestParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the request parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the request parameter","inlinecomment":" \t &apos; Key for the request parameter"},{"label":"value","comment":"Value for the request parameter","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectaddRequestParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the request parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the request parameter","inlinecomment":" \t &apos; Value for the request parameter"}]},{"label":"New","comment":"Constructor. This is automatically called during extractObjects() and should not be run manually.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltMXObjects.VoltMxRequestObject","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(result As VoltMxResultObject, serviceInputParams As JsonObject, identityParam As JsonObject, jsonObj As JsonObject)","signature":"Public Sub New(result As VoltMxResultObject, serviceInputParams As JsonObject, identityParam As JsonObject, jsonObj As JsonObject)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor. This is automatically called during extractObjects() and should not be run manually.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor. This is automatically called during extractObjects() and should not be run manually.","inlinecomment":" \t &apos; Constructor. This is automatically called during extractObjects() and should not be run manually.","parentclassname":"VoltMxRequestObject","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"result","comment":"Result object that will be passed back to Foundry","valuetype":"VoltMxResultObject","filenamebase":"result_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectNew","qn":"result","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Result object that will be passed back to Foundry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Result object that will be passed back to Foundry","inlinecomment":" \t &apos; Result object that will be passed back to Foundry"},{"label":"serviceInputParams","comment":"JsonObject of input parameters for the integration service","valuetype":"JsonObject","filenamebase":"serviceInputParams_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectNew","qn":"serviceInputParams","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject of input parameters for the integration service&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject of input parameters for the integration service","inlinecomment":" \t &apos; JsonObject of input parameters for the integration service"},{"label":"identityParam","comment":"JsonObject of identity parameter (or Nothing) for the integration service","valuetype":"JsonObject","filenamebase":"identityParam_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectNew","qn":"identityParam","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject of identity parameter (or Nothing) for the integration service&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject of identity parameter (or Nothing) for the integration service","inlinecomment":" \t &apos; JsonObject of identity parameter (or Nothing) for the integration service"},{"label":"jsonObj","comment":"JsonObject containing the Foundry request","valuetype":"JsonObject","filenamebase":"jsonObj_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxRequestObjectNew","qn":"jsonObj","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject containing the Foundry request&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject containing the Foundry request","inlinecomment":" \t &apos; JsonObject containing the Foundry request"}]}]},{"classname":"VoltMxResponseObject","comment":"Class for interacting with Volt MX response.","valuetype":"","filenamebase":"VoltMxResponseObject_ObjectClass","fqnprefix":"VoltMXObjects","qn":"VoltMxResponseObject","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"0A6FC0BAC7B15FD680258AAE00372A36","signature":"Public Class VoltMxResponseObject","modifiers":"Public","classname":"VoltMxResponseObject","parentclassname":"None","constructorsignature":"Public Sub New(result As VoltMxResultObject, jsonObj As JsonObject)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for interacting with Volt MX response.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for interacting with Volt MX response.","inlinecomment":" \t &apos; Class for interacting with Volt MX response.","codesamplehtml":"", "methods":[{"label":"getDeviceHeaderParam","comment":"Gets a device header parameter for the Foundry response.","valuetype":"String","filenamebase":"getDeviceHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxResponseObject","qn":"getDeviceHeaderParam","codesample":"&amp;apos; The following code gets the Device-Memory header, if available\nCall VoltMxResponse.getDeviceHeaderParam(&amp;quot;Device-Memory&amp;quot;)","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getDeviceHeaderParam(key As String) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a device header parameter for the Foundry response.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a device header parameter for the Foundry response.","inlinecomment":" \t &apos; Gets a device header parameter for the Foundry response.","parentclassname":"VoltMxResponseObject","codesamplehtml":"&amp;apos; The following code gets the Device-Memory header, if available&lt;br /&gt;Call VoltMxResponse.getDeviceHeaderParam(&amp;quot;Device-Memory&amp;quot;)", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key for the device header parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectgetDeviceHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the device header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the device header parameter","inlinecomment":" \t &apos; Key for the device header parameter"}]},{"label":"getHeaderParam","comment":"Gets a header parameter from the Foundry response. This is only relevant for postprocessors.","valuetype":"Variant","filenamebase":"getHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxResponseObject","qn":"getHeaderParam","codesample":"&amp;apos;The following code aborts if response content-type was not JSON\nIf (VoltMxResponse.getHeaderParam(&amp;quot;Content-Type&amp;quot;) != &amp;quot;application/json&amp;quot; Then Return","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getHeaderParam(key As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets a header parameter from the Foundry response. This is only relevant for postprocessors.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets a header parameter from the Foundry response. This is only relevant for postprocessors.","inlinecomment":" \t &apos; Gets a header parameter from the Foundry response. This is only relevant for postprocessors.","parentclassname":"VoltMxResponseObject","codesamplehtml":"&amp;apos;The following code aborts if response content-type was not JSON&lt;br /&gt;If (VoltMxResponse.getHeaderParam(&amp;quot;Content-Type&amp;quot;) != &amp;quot;application/json&amp;quot; Then Return", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key for the header parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectgetHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the header parameter","inlinecomment":" \t &apos; Key for the header parameter"}]},{"label":"getStatusCode","comment":"Gets the status code of the Foundry response. This is only relevant for postprocessors.","valuetype":"Integer","filenamebase":"getStatusCode_Method","fqnprefix":"VoltMXObjects.VoltMxResponseObject","qn":"getStatusCode","codesample":"&amp;apos;The following code aborts immediately if main integration service request returned a status other than 200\nIf (VoltMxResponse.getStatusCode != 200) Then Return","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function getStatusCode() As Integer","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Gets the status code of the Foundry response. This is only relevant for postprocessors.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Gets the status code of the Foundry response. This is only relevant for postprocessors.","inlinecomment":" \t &apos; Gets the status code of the Foundry response. This is only relevant for postprocessors.","parentclassname":"VoltMxResponseObject","codesamplehtml":"&amp;apos;The following code aborts immediately if main integration service request returned a status other than 200&lt;br /&gt;If (VoltMxResponse.getStatusCode != 200) Then Return", "signatureelements":["Public","Function"]},{"label":"addDeviceHeaderParam","comment":"Adds a device header parameter for the Foundry response. This proxies the corresponding method in VoltMxResult object.","valuetype":"","filenamebase":"addDeviceHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxResponseObject","qn":"addDeviceHeaderParam","codesample":"&amp;apos; The following adds a device header\nCall VoltMxResponse.addDeviceHeader(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As String)","signature":"Public Sub addDeviceHeaderParam(key As String, value As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a device header parameter for the Foundry response. This proxies the corresponding method in VoltMxResult object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a device header parameter for the Foundry response. This proxies the corresponding method in VoltMxResult object.","inlinecomment":" \t &apos; Adds a device header parameter for the Foundry response. This proxies the corresponding method in VoltMxResult object.","parentclassname":"VoltMxResponseObject","codesamplehtml":"&amp;apos; The following adds a device header&lt;br /&gt;Call VoltMxResponse.addDeviceHeader(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key of the device header parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectaddDeviceHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key of the device header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key of the device header parameter","inlinecomment":" \t &apos; Key of the device header parameter"},{"label":"value","comment":"String value of the device header parameter","valuetype":"String","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectaddDeviceHeaderParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String value of the device header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String value of the device header parameter","inlinecomment":" \t &apos; String value of the device header parameter"}]},{"label":"addHeaderParam","comment":"Adds a header param to the Foundry response. This proxies the corresponding method in VoltMxResult object.","valuetype":"","filenamebase":"addHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxResponseObject","qn":"addHeaderParam","codesample":"&amp;apos; This code adds a header parameter to VoltMxRequest object\nCall VoltMxResponse.addHeaderParam(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addHeaderParam(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a header param to the Foundry response. This proxies the corresponding method in VoltMxResult object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a header param to the Foundry response. This proxies the corresponding method in VoltMxResult object.","inlinecomment":" \t &apos; Adds a header param to the Foundry response. This proxies the corresponding method in VoltMxResult object.","parentclassname":"VoltMxResponseObject","codesamplehtml":"&amp;apos; This code adds a header parameter to VoltMxRequest object&lt;br /&gt;Call VoltMxResponse.addHeaderParam(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the Foundry response parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectaddHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the Foundry response parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the Foundry response parameter","inlinecomment":" \t &apos; Key for the Foundry response parameter"},{"label":"value","comment":"Value for the Foundry response parameter","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectaddHeaderParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the Foundry response parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the Foundry response parameter","inlinecomment":" \t &apos; Value for the Foundry response parameter"}]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltMXObjects.VoltMxResponseObject","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(result As VoltMxResultObject, jsonObj As JsonObject)","signature":"Public Sub New(result As VoltMxResultObject, jsonObj As JsonObject)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"VoltMxResponseObject","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"result","comment":"Result object that will be passed back to Foundry","valuetype":"VoltMxResultObject","filenamebase":"result_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectNew","qn":"result","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Result object that will be passed back to Foundry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Result object that will be passed back to Foundry","inlinecomment":" \t &apos; Result object that will be passed back to Foundry"},{"label":"jsonObj","comment":"JsonObject containing the Foundry response object","valuetype":"JsonObject","filenamebase":"jsonObj_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResponseObjectNew","qn":"jsonObj","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject containing the Foundry response object&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject containing the Foundry response object","inlinecomment":" \t &apos; JsonObject containing the Foundry response object"}]}]},{"classname":"VoltMxResultObject","comment":"Class for passing content back to Foundry and manipulating results from an integration service in its postprocessor.","valuetype":"","filenamebase":"VoltMxResultObject_ObjectClass","fqnprefix":"VoltMXObjects","qn":"VoltMxResultObject","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"A6701C3ED7A5D2D680258AAE00371965","signature":"Public Class VoltMxResultObject","modifiers":"Public","classname":"VoltMxResultObject","parentclassname":"None","constructorsignature":"Public Sub New(isPreProcessor As Boolean)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for passing content back to Foundry and manipulating results from an integration service in its postprocessor.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for passing content back to Foundry and manipulating results from an integration service in its postprocessor.","inlinecomment":" \t &apos; Class for passing content back to Foundry and manipulating results from an integration service in its postprocessor.","codesamplehtml":"", "methods":[{"label":"toJson","comment":"Converts the VoltMxResultObject into JSON for passing back to Foundry&amp;apos;","valuetype":"JsonObject","filenamebase":"toJson_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"toJson","codesample":"&amp;apos; This code is from the Foundry boilerplate\n    Try\n    \n    Catch\n        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))\n    Finally\n        Print VoltMxResult.toJson().toString(false)\n    End Try","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Public Function toJson() As JsonObject","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Converts the VoltMxResultObject into JSON for passing back to Foundry&amp;apos;&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Converts the VoltMxResultObject into JSON for passing back to Foundry&amp;apos;","inlinecomment":" \t &apos; Converts the VoltMxResultObject into JSON for passing back to Foundry&amp;apos;","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; This code is from the Foundry boilerplate&lt;br /&gt;    Try&lt;br /&gt;    &lt;br /&gt;    Catch&lt;br /&gt;        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))&lt;br /&gt;    Finally&lt;br /&gt;        Print VoltMxResult.toJson().toString(false)&lt;br /&gt;    End Try", "signatureelements":["Public","Function"]},{"label":"httpStatusCode","comment":"HTTP status code that will be returned from the integration service.","valuetype":"Integer","filenamebase":"httpStatusCode_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"Get.httpStatusCode","codesample":"&amp;apos; The following tells the user they are not allowed to perform this code\nVoltMxResult.httpStatusCode = 403\nVoltMxResult.opstatus = 1\nCall VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get httpStatusCode As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;HTTP status code that will be returned from the integration service.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"HTTP status code that will be returned from the integration service.","inlinecomment":" \t &apos; HTTP status code that will be returned from the integration service.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following tells the user they are not allowed to perform this code&lt;br /&gt;VoltMxResult.httpStatusCode = 403&lt;br /&gt;VoltMxResult.opstatus = 1&lt;br /&gt;Call VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)", "signatureelements":["Public","Property","Get"]},{"label":"opstatus","comment":"Opstatus that will be returned from the integration service.","valuetype":"Integer","filenamebase":"opstatus_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"Get.opstatus","codesample":"&amp;apos; The following code sets the opstatus to 1. opstatus 0 is typically used by Iris processing to denote success.\nVoltMxResult.httpStatusCode = 403\nVoltMxResult.opstatus = 1\nCall VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get opstatus As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Opstatus that will be returned from the integration service.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Opstatus that will be returned from the integration service.","inlinecomment":" \t &apos; Opstatus that will be returned from the integration service.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following code sets the opstatus to 1. opstatus 0 is typically used by Iris processing to denote success.&lt;br /&gt;VoltMxResult.httpStatusCode = 403&lt;br /&gt;VoltMxResult.opstatus = 1&lt;br /&gt;Call VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)", "signatureelements":["Public","Property","Get"]},{"label":"result","comment":"JsonObject that will be outputted from the integration service","valuetype":"JsonObject","filenamebase":"result_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"Get.result","codesample":"&amp;apos; The following code adds a boolean &amp;quot;success&amp;quot; parameter to the JSON output of the integration service\nVoltMxResult.result.insertValue(&amp;quot;success&amp;quot;, true)","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get result As JsonObject","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject that will be outputted from the integration service&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject that will be outputted from the integration service","inlinecomment":" \t &apos; JsonObject that will be outputted from the integration service","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following code adds a boolean &amp;quot;success&amp;quot; parameter to the JSON output of the integration service&lt;br /&gt;VoltMxResult.result.insertValue(&amp;quot;success&amp;quot;, true)", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"httpStatusCode","comment":"HTTP status code that will be returned from the integration service.","valuetype":"Integer","filenamebase":"httpStatusCode_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"Set.httpStatusCode","codesample":"&amp;apos; The following tells the user they are not allowed to perform this code\nVoltMxResult.httpStatusCode = 403\nVoltMxResult.opstatus = 1\nCall VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set httpStatusCode As Integer","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;HTTP status code that will be returned from the integration service.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"HTTP status code that will be returned from the integration service.","inlinecomment":" \t &apos; HTTP status code that will be returned from the integration service.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following tells the user they are not allowed to perform this code&lt;br /&gt;VoltMxResult.httpStatusCode = 403&lt;br /&gt;VoltMxResult.opstatus = 1&lt;br /&gt;Call VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)", "signatureelements":["Public","Property","Set"]},{"label":"opstatus","comment":"Opstatus that will be returned from the integration service.","valuetype":"Integer","filenamebase":"opstatus_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"Set.opstatus","codesample":"&amp;apos; The following code sets the opstatus to 1. opstatus 0 is typically used by Iris processing to denote success.\nVoltMxResult.httpStatusCode = 403\nVoltMxResult.opstatus = 1\nCall VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set opstatus As Integer","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Opstatus that will be returned from the integration service.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Opstatus that will be returned from the integration service.","inlinecomment":" \t &apos; Opstatus that will be returned from the integration service.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following code sets the opstatus to 1. opstatus 0 is typically used by Iris processing to denote success.&lt;br /&gt;VoltMxResult.httpStatusCode = 403&lt;br /&gt;VoltMxResult.opstatus = 1&lt;br /&gt;Call VoltMxResult.result.insertMessage(&amp;quot;error&amp;quot;, &amp;quot;You are not authorized to perform this operation&amp;quot;)", "signatureelements":["Public","Property","Set"]},{"label":"addDeviceHeaderParam","comment":"Adds a device header parameter for the Foundry response.","valuetype":"","filenamebase":"addDeviceHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"addDeviceHeaderParam","codesample":"&amp;apos; The following adds a device header\nCall VoltMxResult.addDeviceHeader(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As String)","signature":"Public Sub addDeviceHeaderParam(key As String, value As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a device header parameter for the Foundry response.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a device header parameter for the Foundry response.","inlinecomment":" \t &apos; Adds a device header parameter for the Foundry response.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following adds a device header&lt;br /&gt;Call VoltMxResult.addDeviceHeader(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key of the device header parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddDeviceHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key of the device header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key of the device header parameter","inlinecomment":" \t &apos; Key of the device header parameter"},{"label":"value","comment":"String value for the device header parameter","valuetype":"String","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddDeviceHeaderParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String value for the device header parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String value for the device header parameter","inlinecomment":" \t &apos; String value for the device header parameter"}]},{"label":"addHeaderParam","comment":"Adds a header param to the Foundry response.","valuetype":"","filenamebase":"addHeaderParam_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"addHeaderParam","codesample":"&amp;apos; This code adds a header parameter to VoltMxRequest object\nCall VoltMxResult.addHeaderParam(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addHeaderParam(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a header param to the Foundry response.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a header param to the Foundry response.","inlinecomment":" \t &apos; Adds a header param to the Foundry response.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; This code adds a header parameter to VoltMxRequest object&lt;br /&gt;Call VoltMxResult.addHeaderParam(&amp;quot;X-VOLTSCRIPT&amp;quot;, &amp;quot;Ran&amp;quot;)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the Foundry response parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddHeaderParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the Foundry response parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the Foundry response parameter","inlinecomment":" \t &apos; Key for the Foundry response parameter"},{"label":"value","comment":"Value for the Foundry response parameter","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddHeaderParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the Foundry response parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the Foundry response parameter","inlinecomment":" \t &apos; Value for the Foundry response parameter"}]},{"label":"addInputParam","comment":"Adds an input parameter for the Foundry integration service. This is only relevant for preprocessors.","valuetype":"","filenamebase":"addInputParam_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"addInputParam","codesample":"&amp;apos;The following code would add a username from a session parameter to the subsequent request, if available. This could be used to lazy-load the value.\nDim username as String\nusername = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)\nIf (username != &amp;quot;&amp;quot;) Then\n    Call VoltMxResult.addInputParam(&amp;quot;username&amp;quot;, username)\nElse\n   &amp;apos; E.g. extract from base64-decoded JWT token)\nEnd If","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addInputParam(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds an input parameter for the Foundry integration service. This is only relevant for preprocessors.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds an input parameter for the Foundry integration service. This is only relevant for preprocessors.","inlinecomment":" \t &apos; Adds an input parameter for the Foundry integration service. This is only relevant for preprocessors.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos;The following code would add a username from a session parameter to the subsequent request, if available. This could be used to lazy-load the value.&lt;br /&gt;Dim username as String&lt;br /&gt;username = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)&lt;br /&gt;If (username != &amp;quot;&amp;quot;) Then&lt;br /&gt;    Call VoltMxResult.addInputParam(&amp;quot;username&amp;quot;, username)&lt;br /&gt;Else&lt;br /&gt;   &amp;apos; E.g. extract from base64-decoded JWT token)&lt;br /&gt;End If", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the input parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddInputParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the input parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the input parameter","inlinecomment":" \t &apos; Key for the input parameter"},{"label":"value","comment":"Value for the input parameter","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddInputParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the input parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the input parameter","inlinecomment":" \t &apos; Value for the input parameter"}]},{"label":"addRequestParam","comment":"Adds a request parameter to the Foundry request. Only relevant for preprocessors.","valuetype":"","filenamebase":"addRequestParam_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"addRequestParam","codesample":"&amp;apos; This code adds a request parameter to the subsequent request\nCall VoltMxResult.addRequestParam(&amp;quot;VOLT-MX-VOLTSCRIPT&amp;quot;, &amp;quot;Code ran&amp;quot;)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addRequestParam(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a request parameter to the Foundry request. Only relevant for preprocessors.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a request parameter to the Foundry request. Only relevant for preprocessors.","inlinecomment":" \t &apos; Adds a request parameter to the Foundry request. Only relevant for preprocessors.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; This code adds a request parameter to the subsequent request&lt;br /&gt;Call VoltMxResult.addRequestParam(&amp;quot;VOLT-MX-VOLTSCRIPT&amp;quot;, &amp;quot;Code ran&amp;quot;)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the request parameter","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddRequestParam","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the request parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the request parameter","inlinecomment":" \t &apos; Key for the request parameter"},{"label":"value","comment":"Value for the request parameter","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddRequestParam","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the request parameter&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the request parameter","inlinecomment":" \t &apos; Value for the request parameter"}]},{"label":"addSessionAttribute","comment":"Adds a session attribute for the Foundry session object.","valuetype":"","filenamebase":"addSessionAttribute_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"addSessionAttribute","codesample":"&amp;apos; The following code adds a JWT token from a variable to the session, for use in subsequent calls. This might be used if you are authenticating via a functional account.\nCall VoltMxResult.addSessionAttribute(&amp;quot;authToken&amp;quot;, jwtToken)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addSessionAttribute(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a session attribute for the Foundry session object.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a session attribute for the Foundry session object.","inlinecomment":" \t &apos; Adds a session attribute for the Foundry session object.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following code adds a JWT token from a variable to the session, for use in subsequent calls. This might be used if you are authenticating via a functional account.&lt;br /&gt;Call VoltMxResult.addSessionAttribute(&amp;quot;authToken&amp;quot;, jwtToken)", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the session attribute","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddSessionAttribute","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the session attribute&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the session attribute","inlinecomment":" \t &apos; Key for the session attribute"},{"label":"value","comment":"Value for the session attribute","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectaddSessionAttribute","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the session attribute&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the session attribute","inlinecomment":" \t &apos; Value for the session attribute"}]},{"label":"echoHttpServerContext","comment":"Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.","valuetype":"","filenamebase":"echoHttpServerContext_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"echoHttpServerContext","codesample":"&amp;apos; This code just echoes the http server context\nCall VoltMxResult.echoUnitTestContext()","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub echoHttpServerContext()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.","inlinecomment":" \t &apos; Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; This code just echoes the http server context&lt;br /&gt;Call VoltMxResult.echoUnitTestContext()", "signatureelements":["Public","Sub"]},{"label":"echoUnitTestContext","comment":"Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.","valuetype":"","filenamebase":"echoUnitTestContext_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"echoUnitTestContext","codesample":"&amp;apos; This code just echoes the context\nCall VoltMxResult.echoUnitTestContext()","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub echoUnitTestContext()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.","inlinecomment":" \t &apos; Copies the incoming unit test context for VoltScript HTTP server into the result, the unitTestContext element outputed by setting &amp;quot;vsTestingContext&amp;quot;:true in integration services.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; This code just echoes the context&lt;br /&gt;Call VoltMxResult.echoUnitTestContext()", "signatureelements":["Public","Sub"]},{"label":"loadFromJson","comment":"","valuetype":"","filenamebase":"loadFromJson_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"loadFromJson","codesample":"&amp;apos; The following code is from extractObjects function\n    Call jsonParser.loadFromJson(data)\n    Set jsonObj = jsonParser.getRootObject()\n    If (jsonObj.isChild(RESULT_PARAM)) Then\n        Set passedObj = jsonObj.getChild(RESULT_PARAM)\n    Else\n        Set passedObj = New JsonObject()\n    End If\n    Call VoltMxResult.loadFromjson(passedObj)","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(jsonObj As JsonObject)","signature":"Public Sub loadFromJson(jsonObj As JsonObject)","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; The following code is from extractObjects function&lt;br /&gt;    Call jsonParser.loadFromJson(data)&lt;br /&gt;    Set jsonObj = jsonParser.getRootObject()&lt;br /&gt;    If (jsonObj.isChild(RESULT_PARAM)) Then&lt;br /&gt;        Set passedObj = jsonObj.getChild(RESULT_PARAM)&lt;br /&gt;    Else&lt;br /&gt;        Set passedObj = New JsonObject()&lt;br /&gt;    End If&lt;br /&gt;    Call VoltMxResult.loadFromjson(passedObj)", "signatureelements":["Public","Sub"], "arguments":[{"label":"jsonObj","comment":"JSON object containing the incoming result","valuetype":"JsonObject","filenamebase":"jsonObj_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectloadFromJson","qn":"jsonObj","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON object containing the incoming result&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON object containing the incoming result","inlinecomment":" \t &apos; JSON object containing the incoming result"}]},{"label":"New","comment":"Constructor. This is automatically called during extractObjects() and should not be run manually.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(isPreProcessor As Boolean)","signature":"Public Sub New(isPreProcessor As Boolean)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor. This is automatically called during extractObjects() and should not be run manually.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor. This is automatically called during extractObjects() and should not be run manually.","inlinecomment":" \t &apos; Constructor. This is automatically called during extractObjects() and should not be run manually.","parentclassname":"VoltMxResultObject","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"isPreProcessor","comment":"Whether the VoltScript is being called from a preprocessor","valuetype":"Boolean","filenamebase":"isPreProcessor_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectNew","qn":"isPreProcessor","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Whether the VoltScript is being called from a preprocessor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Whether the VoltScript is being called from a preprocessor","inlinecomment":" \t &apos; Whether the VoltScript is being called from a preprocessor"}]},{"label":"setErrorMessage","comment":"Sets an error message to pass back to Foundry. Only a single string error message can be passed back.","valuetype":"","filenamebase":"setErrorMessage_Method","fqnprefix":"VoltMXObjects.VoltMxResultObject","qn":"setErrorMessage","codesample":"&amp;apos; This code is from the Foundry boilerplate\n    Try\n    Catch\n        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))\n    Finally\n        Print VoltMxResult.toJson().toString(false)\n    End Try","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(message As String)","signature":"Public Sub setErrorMessage(message As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Sets an error message to pass back to Foundry. Only a single string error message can be passed back.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Sets an error message to pass back to Foundry. Only a single string error message can be passed back.","inlinecomment":" \t &apos; Sets an error message to pass back to Foundry. Only a single string error message can be passed back.","parentclassname":"VoltMxResultObject","codesamplehtml":"&amp;apos; This code is from the Foundry boilerplate&lt;br /&gt;    Try&lt;br /&gt;    Catch&lt;br /&gt;        Call VoltMxResult.setErrorMessage(getErrorMsg(&amp;quot;VOLTSCRIPT_CONNECTOR: &amp;quot;))&lt;br /&gt;    Finally&lt;br /&gt;        Print VoltMxResult.toJson().toString(false)&lt;br /&gt;    End Try", "signatureelements":["Public","Sub"], "arguments":[{"label":"message","comment":"Error message to send back to the browser","valuetype":"String","filenamebase":"message_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxResultObjectsetErrorMessage","qn":"message","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error message to send back to the browser&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error message to send back to the browser","inlinecomment":" \t &apos; Error message to send back to the browser"}]}]},{"classname":"VoltMxSessionObject","comment":"Class for interacting with Foundry session content.","valuetype":"","filenamebase":"VoltMxSessionObject_ObjectClass","fqnprefix":"VoltMXObjects","qn":"VoltMxSessionObject","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"A50611E249B34B5980258AAE0037032A","signature":"Public Class VoltMxSessionObject","modifiers":"Public","classname":"VoltMxSessionObject","parentclassname":"None","constructorsignature":"Public Sub New(result As VoltMxResultObject, jsonObj As JsonObject)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for interacting with Foundry session content.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for interacting with Foundry session content.","inlinecomment":" \t &apos; Class for interacting with Foundry session content.","codesamplehtml":"", "methods":[{"label":"getAttribute","comment":"Retrieves a session attribute that has been set in a prior request or via setAttribute().","valuetype":"Variant","filenamebase":"getAttribute_Method","fqnprefix":"VoltMXObjects.VoltMxSessionObject","qn":"getAttribute","codesample":"&amp;apos;The following code gets the username session attribute\nDim username as String\nusername = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getAttribute(key As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves a session attribute that has been set in a prior request or via setAttribute().&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves a session attribute that has been set in a prior request or via setAttribute().","inlinecomment":" \t &apos; Retrieves a session attribute that has been set in a prior request or via setAttribute().","parentclassname":"VoltMxSessionObject","codesamplehtml":"&amp;apos;The following code gets the username session attribute&lt;br /&gt;Dim username as String&lt;br /&gt;username = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key of the attribute","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectgetAttribute","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key of the attribute&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key of the attribute","inlinecomment":" \t &apos; Key of the attribute"}]},{"label":"addAttribute","comment":"Adds a session attribute to the Foundry session.","valuetype":"","filenamebase":"addAttribute_Method","fqnprefix":"VoltMXObjects.VoltMxSessionObject","qn":"addAttribute","codesample":"&amp;apos; The following code would take a converted JWT token and extract the &amp;quot;sub&amp;quot; element within it, adding it as the username for the session.\nDim jwtToken as JsonObject\n&amp;apos;Parse identity base64-encoded JWT token into jwtToken JSON\nCall VoltMxSession.addAttribute(&amp;quot;username&amp;quot;, jwtToken.getChild(&amp;quot;sub&amp;quot;).scalarValue","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addAttribute(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a session attribute to the Foundry session.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a session attribute to the Foundry session.","inlinecomment":" \t &apos; Adds a session attribute to the Foundry session.","parentclassname":"VoltMxSessionObject","codesamplehtml":"&amp;apos; The following code would take a converted JWT token and extract the &amp;quot;sub&amp;quot; element within it, adding it as the username for the session.&lt;br /&gt;Dim jwtToken as JsonObject&lt;br /&gt;&amp;apos;Parse identity base64-encoded JWT token into jwtToken JSON&lt;br /&gt;Call VoltMxSession.addAttribute(&amp;quot;username&amp;quot;, jwtToken.getChild(&amp;quot;sub&amp;quot;).scalarValue", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the session attribute","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectaddAttribute","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the session attribute&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the session attribute","inlinecomment":" \t &apos; Key for the session attribute"},{"label":"value","comment":"Value for the session attribute. This should be a scalar.","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectaddAttribute","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the session attribute. This should be a scalar.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the session attribute. This should be a scalar.","inlinecomment":" \t &apos; Value for the session attribute. This should be a scalar."}]},{"label":"New","comment":"Constructor. This is automatically called during extractObjects() and should not be run manually.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltMXObjects.VoltMxSessionObject","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(result As VoltMxResultObject, jsonObj As JsonObject)","signature":"Public Sub New(result As VoltMxResultObject, jsonObj As JsonObject)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor. This is automatically called during extractObjects() and should not be run manually.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor. This is automatically called during extractObjects() and should not be run manually.","inlinecomment":" \t &apos; Constructor. This is automatically called during extractObjects() and should not be run manually.","parentclassname":"VoltMxSessionObject","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"result","comment":"Result object that will be passed back to Foundry","valuetype":"VoltMxResultObject","filenamebase":"result_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectNew","qn":"result","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Result object that will be passed back to Foundry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Result object that will be passed back to Foundry","inlinecomment":" \t &apos; Result object that will be passed back to Foundry"},{"label":"jsonObj","comment":"JsonObject containing cookies","valuetype":"JsonObject","filenamebase":"jsonObj_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectNew","qn":"jsonObj","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject containing cookies&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject containing cookies","inlinecomment":" \t &apos; JsonObject containing cookies"}]}], "variables":[]}], "variables":[]}
