{"classname":"VoltMxSessionObject","comment":"Class for interacting with Foundry session content.","valuetype":"","filenamebase":"VoltMxSessionObject_ObjectClass","fqnprefix":"VoltMXObjects","qn":"VoltMxSessionObject","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"217E2C2ABFAF1525002589CF0046086D","classid":"A50611E249B34B5980258AAE0037032A","signature":"Public Class VoltMxSessionObject","modifiers":"Public","classname":"VoltMxSessionObject","parentclassname":"None","constructorsignature":"Public Sub New(result As VoltMxResultObject, jsonObj As JsonObject)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class for interacting with Foundry session content.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class for interacting with Foundry session content.","inlinecomment":" \t &apos; Class for interacting with Foundry session content.","codesamplehtml":"", "methods":[{"label":"getAttribute","comment":"Retrieves a session attribute that has been set in a prior request or via setAttribute().","valuetype":"Variant","filenamebase":"getAttribute_Method","fqnprefix":"VoltMXObjects.VoltMxSessionObject","qn":"getAttribute","codesample":"&amp;apos;The following code gets the username session attribute\nDim username as String\nusername = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(key As String)","signature":"Public Function getAttribute(key As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Retrieves a session attribute that has been set in a prior request or via setAttribute().&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Retrieves a session attribute that has been set in a prior request or via setAttribute().","inlinecomment":" \t &apos; Retrieves a session attribute that has been set in a prior request or via setAttribute().","parentclassname":"VoltMxSessionObject","codesamplehtml":"&amp;apos;The following code gets the username session attribute&lt;br /&gt;Dim username as String&lt;br /&gt;username = VoltMxSession.getAttribute(&amp;quot;username&amp;quot;)", "signatureelements":["Public","Function"], "arguments":[{"label":"key","comment":"Key of the attribute","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectgetAttribute","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key of the attribute&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key of the attribute","inlinecomment":" \t &apos; Key of the attribute"}]},{"label":"addAttribute","comment":"Adds a session attribute to the Foundry session.","valuetype":"","filenamebase":"addAttribute_Method","fqnprefix":"VoltMXObjects.VoltMxSessionObject","qn":"addAttribute","codesample":"&amp;apos; The following code would take a converted JWT token and extract the &amp;quot;sub&amp;quot; element within it, adding it as the username for the session.\nDim jwtToken as JsonObject\n&amp;apos;Parse identity base64-encoded JWT token into jwtToken JSON\nCall VoltMxSession.addAttribute(&amp;quot;username&amp;quot;, jwtToken.getChild(&amp;quot;sub&amp;quot;).scalarValue","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(key As String, value As Variant)","signature":"Public Sub addAttribute(key As String, value As Variant)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a session attribute to the Foundry session.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a session attribute to the Foundry session.","inlinecomment":" \t &apos; Adds a session attribute to the Foundry session.","parentclassname":"VoltMxSessionObject","codesamplehtml":"&amp;apos; The following code would take a converted JWT token and extract the &amp;quot;sub&amp;quot; element within it, adding it as the username for the session.&lt;br /&gt;Dim jwtToken as JsonObject&lt;br /&gt;&amp;apos;Parse identity base64-encoded JWT token into jwtToken JSON&lt;br /&gt;Call VoltMxSession.addAttribute(&amp;quot;username&amp;quot;, jwtToken.getChild(&amp;quot;sub&amp;quot;).scalarValue", "signatureelements":["Public","Sub"], "arguments":[{"label":"key","comment":"Key for the session attribute","valuetype":"String","filenamebase":"key_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectaddAttribute","qn":"key","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Key for the session attribute&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Key for the session attribute","inlinecomment":" \t &apos; Key for the session attribute"},{"label":"value","comment":"Value for the session attribute. This should be a scalar.","valuetype":"Variant","filenamebase":"value_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectaddAttribute","qn":"value","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Value for the session attribute. This should be a scalar.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Value for the session attribute. This should be a scalar.","inlinecomment":" \t &apos; Value for the session attribute. This should be a scalar."}]},{"label":"New","comment":"Constructor. This is automatically called during extractObjects() and should not be run manually.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltMXObjects.VoltMxSessionObject","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(result As VoltMxResultObject, jsonObj As JsonObject)","signature":"Public Sub New(result As VoltMxResultObject, jsonObj As JsonObject)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor. This is automatically called during extractObjects() and should not be run manually.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor. This is automatically called during extractObjects() and should not be run manually.","inlinecomment":" \t &apos; Constructor. This is automatically called during extractObjects() and should not be run manually.","parentclassname":"VoltMxSessionObject","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"result","comment":"Result object that will be passed back to Foundry","valuetype":"VoltMxResultObject","filenamebase":"result_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectNew","qn":"result","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Result object that will be passed back to Foundry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Result object that will be passed back to Foundry","inlinecomment":" \t &apos; Result object that will be passed back to Foundry"},{"label":"jsonObj","comment":"JsonObject containing cookies","valuetype":"JsonObject","filenamebase":"jsonObj_ValuedElement","fqnprefix":"VoltMXObjectsVoltMxSessionObjectNew","qn":"jsonObj","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JsonObject containing cookies&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JsonObject containing cookies","inlinecomment":" \t &apos; JsonObject containing cookies"}]}], "variables":[]}
